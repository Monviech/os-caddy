# DO NOT EDIT THIS FILE -- OPNsense auto-generated file
{
    storage file_system {
        root /usr/local/etc/caddy
    }
    log {
        output file /var/log/caddy/caddy.log {
            roll_size 10MiB
            roll_keep 10
            roll_keep_for 720h
        }
    }
    email {{ helpers.toList('Pischem.caddy.general.TlsEmail') | first }}
    {% set autoHttpsValue = helpers.toList('Pischem.caddy.general.TlsAutoHttps') | first %}
    {% if autoHttpsValue != "on" %}
    auto_https {{ autoHttpsValue }}
    {% endif %}
    import /usr/local/etc/caddy/caddy.d/*.global
}

{% for reverse in helpers.toList('Pischem.caddy.reverseproxy.reverse') %}
{% if reverse.enabled|default("0") == "1" %}
# Reverse Proxy Domain: "{{ reverse['@uuid'] }}"
{{ reverse.FromDomain|default("") }}{% if reverse.FromPort %}:{{ reverse.FromPort }}{% endif %} {
    {% if reverse.DnsChallenge|default("0") == "1" %}
    tls {
        dns {{ helpers.toList('Pischem.caddy.general.TlsDnsProvider') | first }} {{ helpers.toList('Pischem.caddy.general.TlsDnsApiKey') | first }}
    }
    {% endif %}

    {% for subdomain in helpers.toList('Pischem.caddy.reverseproxy.subdomain') %}
    {% if subdomain.enabled|default("0") == "1" and subdomain.reverse == reverse['@uuid'] %}
    @{{ subdomain.FromDomain }} host {{ subdomain.FromDomain }}{% if subdomain.FromPort %}:{{ subdomain.FromPort }}{% endif %}
    {% filter replace("handle @", "\nhandle @") %}
    handle @{{ subdomain.FromDomain }} {
        {% set subdomain_handles_with_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('subdomain', 'equalto', subdomain['@uuid']) | selectattr('HandlePath', 'defined') | list %}
        {% set subdomain_handles_without_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('subdomain', 'equalto', subdomain['@uuid']) | selectattr('HandlePath', 'undefined') | list %}
        {% for handle in subdomain_handles_with_path %}
        {% if handle.enabled|default("0") == "1" %}
        handle {{ handle.HandlePath }} {
            reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %}
        }
        {% endif %}
        {% endfor %}
        {% for handle in subdomain_handles_without_path %}
        {% if handle.enabled|default("0") == "1" %}
        handle {
            reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %}
        }
        {% endif %}
        {% endfor %}
    }
    {% endfilter %}
    {% endif %}
    {% endfor %}

    {% for handle in helpers.toList('Pischem.caddy.reverseproxy.handle') %}
    {% if handle.enabled|default("0") == "1" and handle.reverse == reverse['@uuid'] and not handle.subdomain %}
    {% if handle.HandlePath %}
    handle {{ handle.HandlePath }} {
        reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %}
    }
    {% else %}
    handle {
        reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %}
    }
    {% endif %}
    {% endif %}
    {% endfor %}
}
{% endif %}
{% endfor %}

import /usr/local/etc/caddy/caddy.d/*.conf
