# DO NOT EDIT THIS FILE -- OPNsense auto-generated file
{
    storage file_system {
        root /usr/local/etc/caddy
    }
    log {
        output file /var/log/caddy/caddy.log {
            roll_size 10MiB
            roll_keep 10
            roll_keep_for 720h
        }
    }
    {% set emailValue = helpers.toList('Pischem.caddy.general.TlsEmail') | first %}
    {% if emailValue %}
    email {{ emailValue }}
    {% endif %}
    {% set autoHttpsValue = helpers.toList('Pischem.caddy.general.TlsAutoHttps') | first %}
    {% if autoHttpsValue != "on" %}
    auto_https {{ autoHttpsValue }}
    {% endif %}
    import /usr/local/etc/caddy/caddy.d/*.global
}

{% for reverse in helpers.toList('Pischem.caddy.reverseproxy.reverse') %}
{% if reverse.enabled|default("0") == "1" %}
# Reverse Proxy Domain: "{{ reverse['@uuid'] }}"
{{ reverse.FromDomain|default("") }}{% if reverse.FromPort %}:{{ reverse.FromPort }}{% endif %} {
    {% set dnsProvider = helpers.toList('Pischem.caddy.general.TlsDnsProvider') | first %}
    {% set dnsApiKey = helpers.toList('Pischem.caddy.general.TlsDnsApiKey') | first %}
    {% set customCert = reverse.CustomCertificate|default("") %}

    {% if dnsProvider != "none" %}
    tls {
        dns {{ dnsProvider }} {{ dnsApiKey }}
    }
    {% elif customCert %}
    tls /usr/local/etc/caddy/certificates/temp/{{ customCert }}.pem /usr/local/etc/caddy/certificates/temp/{{ customCert }}.key
    {% endif %}
    {% set wildcard_handles_with_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('reverse', 'equalto', reverse['@uuid']) | selectattr('HandlePath', 'defined') | selectattr('subdomain', 'undefined') | list %}
    {% set wildcard_handles_without_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('reverse', 'equalto', reverse['@uuid']) | selectattr('HandlePath', 'undefined') | selectattr('subdomain', 'undefined') | list %}

    {% for handle in wildcard_handles_with_path %}
    {% if handle.enabled|default("0") == "1" %}
    {{ handle.HandleType }} {{ handle.HandlePath }} {
        reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %} {
            {% if handle.HttpTls|default("0") == "1" %}
            {% if handle.HttpNtlm|default("0") == "1" %}
            transport http_ntlm {
                tls
                {% if handle.HttpTlsTrustedCaCerts %}
                tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                {% endif %}
            }
            {% else %}
            transport http {
                tls
                {% if handle.HttpTlsTrustedCaCerts %}
                tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                {% endif %}
            }
            {% endif %}
            {% endif %}
        }
    }
    {% endif %}
    {% endfor %}

    {% for handle in wildcard_handles_without_path %}
    {% if handle.enabled|default("0") == "1" %}
    handle {
        reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %} {
            {% if handle.HttpTls|default("0") == "1" %}
            {% if handle.HttpNtlm|default("0") == "1" %}
            transport http_ntlm {
                tls
                {% if handle.HttpTlsTrustedCaCerts %}
                tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                {% endif %}
            }
            {% else %}
            transport http {
                tls
                {% if handle.HttpTlsTrustedCaCerts %}
                tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                {% endif %}
            }
            {% endif %}
            {% endif %}
        }
    }
    {% endif %}
    {% endfor %}

    {% for subdomain in helpers.toList('Pischem.caddy.reverseproxy.subdomain') %}
    {% if subdomain.enabled|default("0") == "1" and subdomain.reverse == reverse['@uuid'] %}
    @{{ subdomain['@uuid'] }} host {{ subdomain.FromDomain }}{% if subdomain.FromPort %}:{{ subdomain.FromPort }}{% endif %}
    {% filter replace("handle @", "\nhandle @") %}
    handle @{{ subdomain['@uuid'] }} {
        {% set subdomain_handles_with_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('subdomain', 'equalto', subdomain['@uuid']) | selectattr('HandlePath', 'defined') | list %}
        {% set subdomain_handles_without_path = helpers.toList('Pischem.caddy.reverseproxy.handle') | selectattr('subdomain', 'equalto', subdomain['@uuid']) | selectattr('HandlePath', 'undefined') | list %}
        {% for handle in subdomain_handles_with_path %}
        {% if handle.enabled|default("0") == "1" %}
        {{ handle.HandleType }} {{ handle.HandlePath }} {
            reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %} {
                {% if handle.HttpTls|default("0") == "1" %}
                {% if handle.HttpNtlm|default("0") == "1" %}
                transport http_ntlm {
                    tls
                    {% if handle.HttpTlsTrustedCaCerts %}
                    tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                    {% endif %}
                }
                {% else %}
                transport http {
                    tls
                    {% if handle.HttpTlsTrustedCaCerts %}
                    tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                    {% endif %}
                }
                {% endif %}
                {% endif %}
            }
        }
        {% endif %}
        {% endfor %}
        {% for handle in subdomain_handles_without_path %}
        {% if handle.enabled|default("0") == "1" %}
        handle {
            reverse_proxy {{ handle.ToDomain }}{% if handle.ToPort %}:{{ handle.ToPort }}{% endif %} {
                {% if handle.HttpTls|default("0") == "1" %}
                {% if handle.HttpNtlm|default("0") == "1" %}
                transport http_ntlm {
                    tls
                    {% if handle.HttpTlsTrustedCaCerts %}
                    tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                    {% endif %}
                }
                {% else %}
                transport http {
                    tls
                    {% if handle.HttpTlsTrustedCaCerts %}
                    tls_trusted_ca_certs /usr/local/etc/caddy/certificates/temp/{{ handle.HttpTlsTrustedCaCerts }}.pem
                    {% endif %}
                }
                {% endif %}
                {% endif %}
            }
        }
        {% endif %}
        {% endfor %}
    }
    {% endfilter %}
    {% endif %}
    {% endfor %}
}
{% endif %}
{% endfor %}

import /usr/local/etc/caddy/caddy.d/*.conf
